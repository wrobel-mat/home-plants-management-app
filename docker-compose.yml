version: '3.9'
services:
    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
            target: development
        image: home-jungle-frontend:dev
        container_name: frontend
        ports:
            - '3000:3000'
        env_file:
            - ./env/frontend.env
        volumes:
            - ./frontend:/app
            - /app/node_modules
        networks:
            - frontend
        depends_on:
            - backend
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
            target: development
        command:
            [
                './mvnw',
                'spring-boot:run',
                '-Dspring-boot.run.profiles=default',
                '-Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"',
            ]
        image: home-jungle-backend:dev
        container_name: backend
        ports:
            - '5005:5005'
        #   - '8080:8080'
        env_file:
            - ./env/backend.env
        volumes:
            - ./backend:/app
        networks:
            - frontend
            - backend
        depends_on:
            - postgres
            - rabbitmq
    postgres:
        image: postgres:14.1-alpine
        container_name: postgres
        env_file:
            - ./env/postgres.env
        # ports:
        #   - '5432:5432'
        volumes:
            - home-jungle-db:/var/lib/postgresql/data
        networks:
            - backend
    rabbitmq:
        image: rabbitmq:3.9-alpine
        container_name: rabbitmq
        networks:
            - backend
        # ports:
        #   - '5672:5672'
networks:
    backend: {}
    frontend: {}
volumes:
    home-jungle-db:
#
# docker-compose up --build
