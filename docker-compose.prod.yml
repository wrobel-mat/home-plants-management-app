version: '3.9'
services:
    proxy:
        depends_on:
            - frontend
            - backend
        restart: always
        image: home-jungle-proxy:prod
        container_name: proxy
        build:
            context: ./proxy
            dockerfile: Dockerfile
        ports:
            - '80:80'
        env_file:
          - ./docker-env/proxy.prod.env
    frontend:
        depends_on:
            - backend
        build:
            context: ./frontend
            dockerfile: Dockerfile
            target: production
        image: home-jungle-frontend:prod
        container_name: frontend
        # ports:
        #     - '3000:3000'
    backend:
        depends_on:
            - postgres
            - rabbitmq
        build:
            context: ./backend
            dockerfile: Dockerfile
            target: production
        image: home-jungle-backend:prod
        container_name: backend
        # ports:
        #    - '8080:8080'
        env_file:
            - ./docker-env/backend.prod.env
    postgres:
        image: postgres:14.1-alpine
        container_name: postgres
        env_file:
            - ./docker-env/postgres.env
        # ports:
        #   - '5432:5432'
        volumes:
            - home-jungle-db-prod:/var/lib/postgresql/data
    rabbitmq:
        image: rabbitmq:3.9-alpine
        container_name: rabbitmq
        # ports:
        #   - '5672:5672'
volumes:
    home-jungle-db-prod:
#
# docker-compose -f docker-compose.prod.yml up -d --build --remove-orphans
